@model IEnumerable<WebApplication1.Models.ViewModels.ScheduleViewModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Current Schedule</h2>
@if (ViewBag.isParamSuccess == true)
{
    <div class="alert bg-success">
        <span class="closebtn" onclick="this.parentElement.style.display = 'none';">&times;</span>
        Parameters changed successfully
    </div>
}
@switch (ViewBag.messageState)
{
    case 0:
        <div class="alert bg-success">
            <span class="closebtn" onclick="this.parentElement.style.display = 'none';">&times;</span>
            @ViewBag.message
        </div>
        break;
    case 1:
        <div class="alert bg-warning">
            <span class="closebtn" onclick="this.parentElement.style.display = 'none';">&times;</span>
            @ViewBag.message
        </div>
        break;
    case 2:
        <div class="alert bg-danger">
            <span class="closebtn" onclick="this.parentElement.style.display = 'none';">&times;</span>
            @ViewBag.message
        </div>
        break;
}
<p>
    @if (ViewBag.isAdmin == true)
    {
        @Html.ActionLink("Reschedule", "Reschedule", htmlAttributes: new {@class = "btn btn-outline-success"}, routeValues: null)
    }
</p>
<table class="table table-striped table-bordered table-hover custom-table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Course)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Day)
        </th>
        <th style="width: auto">
            @Html.DisplayNameFor(model => model.TimeSlot)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(item.Course, "CourseEnrollments", "Enrollment", new {courseId = item.CourseId}, new {@class = "table-link"})
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Day)
            </td>
            <td style="width: auto">
                @Html.DisplayFor(modelItem => item.TimeSlot)
            </td>
        </tr>
    }

</table>

<div class="pagination">
    @if (ViewBag.currentPage - 4 > 1)
    {
        <a href="@Url.Action("Index", new {page = 1})">«</a>
    }
    @if (ViewBag.CurrentPage != 1)
    {
        <a href="@Url.Action("Index", new {page = ViewBag.currentPage - 1})"><</a>
    }
    @for (var i = 1; i <= ViewBag.maxPage; i++)
    {
        if (ViewBag.currentPage == i)
        {
            <a class="active" href="@Url.Action("Index", new {page = i})">@i</a>
        }
        else
        {
            if (i <= ViewBag.currentPage + 4 && i >= ViewBag.currentPage - 4)
            {
                <a href="@Url.Action("Index", new {page = i})">@i</a>
            }
        }
    }
    @if (ViewBag.CurrentPage != ViewBag.maxPage)
    {
        <a href="@Url.Action("Index", new {page = ViewBag.currentPage + 1})">></a>
    }
    @if (ViewBag.currentPage + 4 < ViewBag.maxPage)
    {
        <a href="@Url.Action("Index", new {page = ViewBag.maxPage})">»</a>
    }
</div>